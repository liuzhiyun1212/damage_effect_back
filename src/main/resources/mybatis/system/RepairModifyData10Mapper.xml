<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.mapper.RepairModifyData10Mapper">

    <resultMap type="RepairModifyData10" id="RepairModifyData10Result">
        <result property="id"    column="id"    />
        <result property="partsName"    column="parts_name"    />
        <result property="partsModel"    column="parts_model"    />
        <result property="modifyTime"    column="modify_time"    />
        <result property="modifyType"    column="modify_type"    />
        <result property="modifyMethod"    column="modify_method"    />
    </resultMap>

    <sql id="selectRepairModifyData10Vo">
        select id, parts_name, parts_model, modify_time, modify_type, modify_method from repair_modify_data_10
    </sql>
    <resultMap type="ProductModify" id="RepairWayChangeResult">
        <result property="productModel"    column="parts_model"    />
        <result property="productName"    column="parts_name"    />
        <result property="modifyTime"    column="modify_time"    />
    </resultMap>

    <resultMap type="FaultyPartsCount" id="FaultyPartsCountResult">
        <result property="partsModelName" column="parts_model_name"/>
        <result property="partsCount" column="parts_count"/>
        <result property="partsProportion" column="modify_method"/>
    </resultMap>

    <select id="selectRepairModifyData10List" parameterType="RepairModifyData10" resultMap="RepairModifyData10Result">
        <include refid="selectRepairModifyData10Vo"/>
        <where>
            <if test="partsName != null  and partsName != ''"> and parts_name like concat('%', #{partsName}, '%')</if>
            <if test="partsModel != null  and partsModel != ''"> and parts_model = #{partsModel}</if>
            <if test="modifyTime != null "> and modify_time = #{modifyTime}</if>
            <if test="modifyType != null  and modifyType != ''"> and modify_type = #{modifyType}</if>
            <if test="modifyMethod != null  and modifyMethod != ''"> and modify_method = #{modifyMethod}</if>
        </where>
    </select>

    <select id="selectRepairModifyData10ById" parameterType="Integer" resultMap="RepairModifyData10Result">
        <include refid="selectRepairModifyData10Vo"/>
        where id = #{id}
    </select>

    <select id="selectRepairPeople" resultMap="RepairModifyData10Result">
        SELECT
            a.parts_name,
            a.parts_model,
            a.modify_time
        FROM
            repair_modify_data_10 a,
            quality_problem_1 b
        WHERE
            a.parts_name = b.parts_name
            AND a.modify_type = "维修人员变更"
            AND a.parts_model = b.parts_model
            AND b.fault_model IN (
            SELECT
                fault_model
            FROM
                quality_problem_1
            GROUP BY
                fault_model
            HAVING
            COUNT( fault_model )> 0.1 * ( SELECT COUNT( fault_model ) FROM quality_problem_1 ))
        GROUP BY
            a.modify_time
        ORDER BY
            a.modify_time
    </select>





    <insert id="insertRepairModifyData10" parameterType="RepairModifyData10" useGeneratedKeys="true" keyProperty="id">
        insert into repair_modify_data_10
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="partsName != null">parts_name,</if>
            <if test="partsModel != null">parts_model,</if>
            <if test="modifyTime != null">modify_time,</if>
            <if test="modifyType != null">modify_type,</if>
            <if test="modifyMethod != null">modify_method,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="partsName != null">#{partsName},</if>
            <if test="partsModel != null">#{partsModel},</if>
            <if test="modifyTime != null">#{modifyTime},</if>
            <if test="modifyType != null">#{modifyType},</if>
            <if test="modifyMethod != null">#{modifyMethod},</if>
         </trim>
    </insert>

    <update id="updateRepairModifyData10" parameterType="RepairModifyData10">
        update repair_modify_data_10
        <trim prefix="SET" suffixOverrides=",">
            <if test="partsName != null">parts_name = #{partsName},</if>
            <if test="partsModel != null">parts_model = #{partsModel},</if>
            <if test="modifyTime != null">modify_time = #{modifyTime},</if>
            <if test="modifyType != null">modify_type = #{modifyType},</if>
            <if test="modifyMethod != null">modify_method = #{modifyMethod},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteRepairModifyData10ById" parameterType="Integer">
        delete from repair_modify_data_10 where id = #{id}
    </delete>

    <delete id="deleteRepairModifyData10ByIds" parameterType="String">
        delete from repair_modify_data_10 where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <select id="selectRepairWayChange"  resultMap="RepairWayChangeResult">
        SELECT
            parts_name,parts_model,modify_time
        FROM
            repair_modify_data_10
        WHERE
            modify_type = "维修工艺变更"
        GROUP BY parts_name,parts_model,modify_time
        ORDER BY modify_time
    </select>
    <select id="selectFaultyCountByRepairWay"  resultMap="FaultyPartsCountResult">
        SELECT
            CONCAT( parts_model, ' ', parts_name ) AS parts_model_name,COUNT(*) AS parts_count,modify_method
        FROM
            repair_modify_data_10
        WHERE
            modify_type="维修工艺变更"
        GROUP BY parts_model_name,modify_method
        ORDER BY parts_model_name,modify_method
    </select>

</mapper>
